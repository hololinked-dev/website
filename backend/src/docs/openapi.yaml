openapi: 3.1.0
info:
  title: hololinked Website API
  version: 0.1.0
  description: API documentation for the Hololinked website backend.
servers:
  - url: http://localhost:5000
    description: Local development server


components:
  schemas:
    Feedback:
      type: object
      description: Feedback submitted by users
      properties:
        name:
          type: string
        type:
          type: string
          example: "bug" # or "feature"
        email:
          type: string
        text:
          type: string

    FeedbackRow:
      type: object
      description: Feedback data structure for database storage
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
        type:
          type: string
          example: "bug" # or "feature"
        email:
          type: string
        text:
          type: string
        created_at:
          type: string
          format: date-time
          example: "2023-10-01T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2023-10-01T12:00:00Z"

    ResponseMessage:
      type: object
      description: Plain response with a message field
      properties:
        message:
          type: string
          example: "Feedback submitted successfully"

    HealthStatus:
      type: object
      description: Health status of the service
      properties:
        status:
          type: string
          example: "OK"
        message:
          type: string
          example: "Service is healthy"
  
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header 
      name: X-API-KEY # name of the header, query parameter or cookie


paths: 
  /feedbacks:
    post:
      summary: Submit feedback
      operationId: submitFeedback
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
      responses:
        '201':
          description: Feedback submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '422':
          description: Unprocessable payload or validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
                
    get:
      summary: Get all feedbacks
      operationId: getFeedbacks
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: List of feedbacks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedbackRow'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
                    
  /feedbacks/{id}:
    get:
      summary: Get feedback by ID
      operationId: getFeedbackById
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Feedback found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackRow'
        '404':
          description: Feedback not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  
  /health:
    get:
      summary: Health check
      operationId: healthCheck
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
        '500':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
  
       
  

